/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filetreeprinter;

import filetreeprinter.printers.Callback;
import filetreeprinter.printers.CmdFileTreePrinter;
import filetreeprinter.printers.FileTreePrinter;
import java.awt.Color;
import java.awt.event.ItemEvent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;

/**
 *
 * @author filippo.engidashet
 */
public class FileTreePrinterView extends javax.swing.JFrame implements Callback {

    private final FileTreePrinter printer;
    private final JFileChooser fileChooser;

    /**
     * Creates new form FileTreePrinterView
     */
    public FileTreePrinterView() {
        initComponents();
        txtPrintArea.setBackground(Color.BLACK);
        txtPrintArea.setForeground(Color.GREEN);
        btnPrint.addItemListener((ItemEvent ie) -> {
            if (ie.getStateChange() == ItemEvent.SELECTED) {
                btnPrint.setText("Stop");
            } else if (ie.getStateChange() == ItemEvent.DESELECTED) {
                btnPrint.setText("Print");
            }
        });
        printer = new CmdFileTreePrinter(this);
        fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFilePath = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPrintArea = new javax.swing.JTextArea();
        btnPrint = new javax.swing.JToggleButton();
        optHiddenFiles = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtFilePath.setEditable(false);

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        txtPrintArea.setColumns(20);
        txtPrintArea.setRows(5);
        jScrollPane1.setViewportView(txtPrintArea);

        btnPrint.setText("Print");
        btnPrint.setToolTipText("Click to Print Directory Files");
        btnPrint.setName(""); // NOI18N
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        optHiddenFiles.setText("Show Hidden Files");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFilePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(optHiddenFiles)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrint)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPrint)
                    .addComponent(optHiddenFiles))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearPrintArea() {
        txtPrintArea.selectAll();
        txtPrintArea.replaceSelection("");
    }

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            txtFilePath.setText(fileChooser.getSelectedFile().getAbsolutePath());
        } else {
            System.out.println("");
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        if (btnPrint.isSelected()) {
            String path = txtFilePath.getText();
            if (path == null || path.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Path shouldn't be empty!", "Message", JOptionPane.WARNING_MESSAGE);
            } else {
                clearPrintArea();
                printer.print(path, optHiddenFiles.isSelected());
            }
        } else {
            if (printer.isPrinting()) {
                printer.stop();
            }
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JToggleButton btnPrint;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox optHiddenFiles;
    private javax.swing.JTextField txtFilePath;
    private javax.swing.JTextArea txtPrintArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onPrint(String line) {
        System.out.print(line);
        int length = txtPrintArea.getText().length();
        try {
            txtPrintArea.getDocument().insertString(length, line, null);
        } catch (BadLocationException exc) {
        }
        txtPrintArea.setCaretPosition(txtPrintArea.getText().length());
    }

    @Override
    public void onDone() {
        btnPrint.setSelected(false);
    }
}
